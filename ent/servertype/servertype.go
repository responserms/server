// Code generated by entc, DO NOT EDIT.

package servertype

const (
	// Label holds the string label denoting the servertype type in the database.
	Label = "server_type"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeServers holds the string denoting the servers edge name in mutations.
	EdgeServers = "servers"

	// Table holds the table name of the servertype in the database.
	Table = "server_types"
	// ServersTable is the table the holds the servers relation/edge.
	ServersTable = "servers"
	// ServersInverseTable is the table name for the Server entity.
	// It exists in this package in order to avoid circular dependency with the "server" package.
	ServersInverseTable = "servers"
	// ServersColumn is the table column denoting the servers relation/edge.
	ServersColumn = "server_server_type"
)

// Columns holds all SQL columns for servertype fields.
var Columns = []string{
	FieldID,
	FieldKey,
	FieldName,
	FieldDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
